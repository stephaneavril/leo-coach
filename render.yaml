services:
  # Redis ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  - type: redis
    name: leo-trainer-redis          # nuevo servicio KV
    plan: starter

  # Backend Flask (ya exist√≠a) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  - type: web
    name: leo-backend               # o usa el nombre que ya ten√≠as
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: gunicorn app:app
    envVars:
      # secretos ‚Üì
      - key: OPENAI_API_KEY            ; sync: false
      - key: AWS_ACCESS_KEY_ID         ; sync: false
      - key: AWS_SECRET_ACCESS_KEY     ; sync: false
      - key: AWS_S3_BUCKET_NAME        ; sync: false
      - key: AWS_S3_REGION_NAME        ; sync: false
      - key: DATABASE_URL              ; sync: false
      - key: FLASK_SECRET_KEY          ; sync: false
      - key: ADMIN_PASSWORD            ; sync: false
      - key: TEMP_PROCESSING_FOLDER    ; sync: false
      # üîó URL interna de Redis (obligatoria para tu Flask-backend)
      - key: REDIS_URL
        fromService:
          name: leo-trainer-redis
          type: redis
          property: connectionString

  # Frontend Next.js (ya exist√≠a) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  - type: web
    name: leo-frontend
    env: node
    buildCommand: npm install && npm run build
    startCommand: npm run start
    envVars:
      - key: NEXT_PUBLIC_FLASK_API_URL
        value: https://leo-backend.onrender.com
      - key: NODE_ENV
        value: production

  # Celery Worker (el background-worker) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  - type: worker
    name: leo-trainer-worker
    env: docker
    dockerfilePath: ./Dockerfile
    startCommand: >
      celery -A celery_worker.celery_app worker --loglevel=info -c 5
    envVars:
      - key: REDIS_URL          # ‚Üê el mismo nombre que leer√° el c√≥digo
        fromService:
          name: leo-trainer-redis
          type: redis
          property: connectionString